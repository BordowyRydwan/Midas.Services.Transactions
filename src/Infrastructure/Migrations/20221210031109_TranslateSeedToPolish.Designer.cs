// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(TransactionDbContext))]
    [Migration("20221210031109_TranslateSeedToPolish")]
    partial class TranslateSeedToPolish
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("FactorToDefaultCurrency")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.HasKey("Code");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Code = "PLN",
                            FactorToDefaultCurrency = 1m,
                            IsDefault = true
                        });
                });

            modelBuilder.Entity("Domain.Entities.Invoice", b =>
                {
                    b.Property<Guid>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TransactionId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("FileId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Domain.Entities.Transaction", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TransactionCategoryId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Domain.Entities.TransactionCategory", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"), 1L, 1);

                    b.Property<bool>("IsIncome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            Id = 1m,
                            IsIncome = false,
                            Name = "Opłaty"
                        },
                        new
                        {
                            Id = 2m,
                            IsIncome = false,
                            Name = "Subskrypcje"
                        },
                        new
                        {
                            Id = 3m,
                            IsIncome = false,
                            Name = "Pożyczki / kredyty"
                        },
                        new
                        {
                            Id = 4m,
                            IsIncome = false,
                            Name = "Podatki"
                        },
                        new
                        {
                            Id = 5m,
                            IsIncome = false,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 6m,
                            IsIncome = false,
                            Name = "Dom"
                        },
                        new
                        {
                            Id = 7m,
                            IsIncome = false,
                            Name = "Zdrowie i uroda"
                        },
                        new
                        {
                            Id = 8m,
                            IsIncome = false,
                            Name = "Produkty spożywcze"
                        },
                        new
                        {
                            Id = 9m,
                            IsIncome = false,
                            Name = "Rozrywka"
                        },
                        new
                        {
                            Id = 10m,
                            IsIncome = false,
                            Name = "Alimenty"
                        },
                        new
                        {
                            Id = 11m,
                            IsIncome = false,
                            Name = "Dotacje"
                        },
                        new
                        {
                            Id = 12m,
                            IsIncome = false,
                            Name = "Inwestycje"
                        },
                        new
                        {
                            Id = 13m,
                            IsIncome = false,
                            Name = "Inne wydatki"
                        },
                        new
                        {
                            Id = 14m,
                            IsIncome = true,
                            Name = "Dotacje"
                        },
                        new
                        {
                            Id = 15m,
                            IsIncome = true,
                            Name = "Wynagrodzenie"
                        },
                        new
                        {
                            Id = 16m,
                            IsIncome = true,
                            Name = "Emerytura / renta"
                        },
                        new
                        {
                            Id = 17m,
                            IsIncome = true,
                            Name = "Inwestycje"
                        },
                        new
                        {
                            Id = 18m,
                            IsIncome = true,
                            Name = "Biznes"
                        },
                        new
                        {
                            Id = 19m,
                            IsIncome = true,
                            Name = "Alimenty"
                        },
                        new
                        {
                            Id = 20m,
                            IsIncome = true,
                            Name = "Inne przychody"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Invoice", b =>
                {
                    b.HasOne("Domain.Entities.Transaction", "Transaction")
                        .WithMany("Invoices")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Domain.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TransactionCategory", "TransactionCategory")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("TransactionCategory");
                });

            modelBuilder.Entity("Domain.Entities.Transaction", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
